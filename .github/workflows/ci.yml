name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5.2.0

  test:
    strategy:
      fail-fast: false
      matrix:
        versions:
          - python: "3.7"
            django: "2.2"
          - python: "3.7"
            django: "3.0"
          - python: "3.7"
            django: "3.1"
          - python: "3.7"
            django: "3.2"

          - python: "3.8"
            django: "2.2"
          - python: "3.8"
            django: "3.0"
          - python: "3.8"
            django: "3.1"
          - python: "3.8"
            django: "3.2"
          - python: "3.8"
            django: "4.0"
          - python: "3.8"
            django: "4.1"

          - python: "3.9"
            django: "2.2"
          - python: "3.9"
            django: "3.0"
          - python: "3.9"
            django: "3.1"
          - python: "3.9"
            django: "3.2"
          - python: "3.9"
            django: "4.0"
          - python: "3.9"
            django: "4.1"

          - python: "3.10"
            django: "3.2"
          - python: "3.10"
            django: "4.0"
          - python: "3.10"
            django: "4.1"

    runs-on: ubuntu-latest
    name: "Python ${{ matrix.versions.python }} - Django ${{ matrix.versions.django }}"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.versions.python }}
      - uses: snok/install-poetry@v1.3.3
      - name: Install Dependencies
        run: |
          poetry install -E spellcheck
          poetry run pip install "Django~=${{ matrix.versions.django }}.0"
      - name: Run Tests
        run: poetry run pytest --cov-report=xml
      - uses: codecov/codecov-action@v3.1.1

  release:
    runs-on: ubuntu-latest
    environment: release
    if: github.ref == 'refs/heads/main'
    needs:
      - test
      - commitlint

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Run semantic release:
      # - Update CHANGELOG.md
      # - Update version in code
      # - Create git tag
      # - Create GitHub release
      # - Publish to PyPI
      - name: Python Semantic Release
        uses: relekang/python-semantic-release@v7.32.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pypi_token: ${{ secrets.PYPI_TOKEN }}
