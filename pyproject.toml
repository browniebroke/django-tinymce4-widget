[tool.poetry]
name = "django-tinymce4-widget"
version = "6.2.1"
description = "A Django application that provides a TinyMCE 4 editor widget without any static files"
authors = ["Bruno Alla <alla.brunoo@gmail.com>"]
license = "MIT"
readme = "README.md"
keywords = ["django", "wysiwyg", "widget", "tinymce"]
repository = "https://github.com/browniebroke/django-tinymce4-widget"
documentation = "https://django-tinymce4-widget.readthedocs.io"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Framework :: Django",
    "Framework :: Django :: 2.2",
    "Framework :: Django :: 3.0",
    "Framework :: Django :: 3.1",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Editors",
    "Topic :: Text Processing",
    "Topic :: Text Processing :: Markup",
    "Topic :: Text Processing :: Markup :: HTML",
]
packages = [
    { include = "tinymce" },
]

[tool.poetry.dependencies]
python = "^3.6"
Django = ">=2.2,<4.1"
pyenchant = {version = "^3.1.1", optional = true}

# Docs deps
Sphinx = {version = "^4.0.0", optional = true}
sphinx-rtd-theme = {version = "^1.0.0", optional = true}
myst-parser = {version = "^0.16.0", optional = true}

[tool.poetry.extras]
docs = [
    "myst-parser",
    "sphinx",
    "sphinx-rtd-theme",
]
spellcheck = ["pyenchant"]

[tool.poetry.dev-dependencies]
black = {version = "^21.11b1", python = "^3.6.2"}
flake8 = "^4.0.0"
isort = {version = "^5.10.1", python = "^3.6.1"}
pyupgrade = {version = "^2.29.1", python = "^3.6.1"}
tox = "^3.20.1"
coverage = {version = "^6.0", extras = ["toml"]}

[tool.semantic_release]
branch = "main"
version_toml = "pyproject.toml:tool.poetry.version"
version_variable = "tinymce/__init__.py:__version__"
build_command = "pip install poetry && poetry build"

[tool.isort]
profile = "black"
known_first_party = ["tinymce", "test_tinymce"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
omit = [
    "*site-packages*",
    "*tests*",
    "*.tox*",
    "*conftest*",
]
show_missing = true
exclude_lines = ["raise NotImplementedError"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
